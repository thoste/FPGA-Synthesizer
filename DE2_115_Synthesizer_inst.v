// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.


// Generated by Quartus Prime Version 17.1 (Build Build 590 10/25/2017)
// Created on Tue May 08 12:33:02 2018

DE2_115_Synthesizer DE2_115_Synthesizer_inst
(
	.CLOCK_50(CLOCK_50_sig) ,	// input  CLOCK_50_sig
	.ENETCLK_25(ENETCLK_25_sig) ,	// input  ENETCLK_25_sig
	.SW(SW_sig) ,	// input [17:0] SW_sig
	.KEY(KEY_sig) ,	// input [3:0] KEY_sig
	.AUD_ADCDAT(AUD_ADCDAT_sig) ,	// input  AUD_ADCDAT_sig
	.AUD_ADCLRCK(AUD_ADCLRCK_sig) ,	// inout  AUD_ADCLRCK_sig
	.AUD_BCLK(AUD_BCLK_sig) ,	// inout  AUD_BCLK_sig
	.AUD_DACDAT(AUD_DACDAT_sig) ,	// output  AUD_DACDAT_sig
	.AUD_DACLRCK(AUD_DACLRCK_sig) ,	// inout  AUD_DACLRCK_sig
	.AUD_XCK(AUD_XCK_sig) ,	// output  AUD_XCK_sig
	.I2C_SCLK(I2C_SCLK_sig) ,	// output  I2C_SCLK_sig
	.I2C_SDAT(I2C_SDAT_sig) ,	// inout  I2C_SDAT_sig
	.TD_CLK27(TD_CLK27_sig) ,	// input  TD_CLK27_sig
	.TD_RESET_N(TD_RESET_N_sig) ,	// output  TD_RESET_N_sig
	.keys_input(keys_input_sig) 	// input [87:0] keys_input_sig
);

